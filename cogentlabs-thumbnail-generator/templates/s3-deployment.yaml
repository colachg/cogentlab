apiVersion: apps/v1
kind: Deployment
metadata:
  name: thumbnail-generator-s3
  labels:
    app.kubernetes.io/name: thumbnail-generator-s3
    app.kubernetes.io/managed-by: Helm
spec:
  {{- if not .Values.s3.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: thumbnail-generator-s3
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: thumbnail-generator-s3
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cogentlabs-thumbnail-generator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: thumbnail-generator-s3
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.s3.image.name }}:{{ .Values.s3.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.s3.image.pullPolicy }}
          args:
            - server
            - /data
          env:
            - name: MINIO_ENDPOINT
              value: thumbnail-generator-s3
            - name: MINIO_PORT
              value: "9000"
            - name: MINIO_USE_SSL
              value: "false"
            - name: MONGO_URL
              value: mongodb://thumbnail-generator-db:27017
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secrets
                  key: rootUser
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secrets
                  key: rootPassword
          ports:
            - name: http
              containerPort: {{ .Values.s3.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.s3.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: s3-claim0
      volumes:
        - name: s3-claim0
          persistentVolumeClaim:
            claimName: s3-claim0
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
